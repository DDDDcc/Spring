! function(t) {
	function a(t) {
		this.config = t, this.idNode = document.getElementById(this.config.id) || document.body, this.imgNodes = e.getElementsByClassName(this.config.imgs, this.idNode), this.init()
	}
	var e = {
		hasClass: function(t, a) {
			var e = t.className,
				s = new RegExp("(^|s+)" + a + "(s+|$)", "g");
			return s.test(e) ? !0 : !1
		},
		getElementsByClassName: function(t, a) {
			var s = [];
			if(document.getElementsByClassName) s = document.getElementsByClassName(t);
			else
				for(var i = a.getElementsByTagName("*"), n = i.length, h = 0; n > h; h++) e.hasClass(i[h], t) && s.push(i[h]);
			return s
		}
	};
	a.prototype = {
		init: function() {
			this.canvas = this.createCanvas(), this.context = this.canvas.getContext("2d")
		},
		createCanvas: function() {
			var t = document.createElement("canvas");
			return t.setAttribute("id", "ImageFilterCanvas"), t.setAttribute("width", 400), t.setAttribute("height", 400), t
		},
		setBaseImage: function(t, a) {
			var e = this,
				s = new Image;
			s.onload = function() {
				e.canvas.width = s.width, e.canvas.height = s.height, e.context.drawImage(s, 0, 0), s.setAttribute("src", "#"), e[a](t), delete s
			}, s.src = t.getAttribute("src")
		},
		doFilter: function(t) {
			for(var a = this.imgNodes, e = a.length, s = 0; e > s; s++) a[s].getAttribute("data-src") || a[s].setAttribute("data-src", a[s].getAttribute("src")), this.setBaseImage(a[s], t)
		},
		reset: function() {
			for(var t = this.imgNodes, a = t.length, e = 0; a > e; e++) t[e].getAttribute("data-src") && t[e].setAttribute("src", t[e].getAttribute("data-src"))
		},
		grayscale: function(t) {
			for(var a, e = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height), s = e.data, i = s.length, n = 0; i > n; n += 4) a = (s[n] + s[n + 1] + s[n + 2]) / 3, s[n] = a, s[n + 1] = a, s[n + 2] = a;
			e.data = s, this.context.putImageData(e, 0, 0), t.setAttribute("src", this.canvas.toDataURL("image/jpeg"))
		},
		sepia: function(t) {
			for(var a = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height), e = a.data, s = e.length, i = 0; s > i; i += 4) {
				var n = e[i],
					h = e[i + 1],
					c = e[i + 2];
				e[i] = .393 * n + .769 * h + .189 * c, e[i + 1] = .349 * n + .686 * h + .168 * c, e[i + 2] = .272 * n + .534 * h + .131 * c
			}
			a.data = e, this.context.putImageData(a, 0, 0), t.setAttribute("src", this.canvas.toDataURL("image/jpeg"))
		},
		red: function(t) {
			for(var a = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height), e = a.data, s = e.length, i = 0; s > i; i += 4) {
				var n = e[i],
					h = e[i + 1],
					c = e[i + 2];
				e[i] = (n + h + c) / 3, e[i + 1] = 0, e[i + 2] = 0
			}
			a.data = e, this.context.putImageData(a, 0, 0), t.setAttribute("src", this.canvas.toDataURL("image/jpeg"))
		},
		invert: function(t) {
			for(var a = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height), e = a.data, s = e.length, i = 0; s > i; i += 4) {
				var n = e[i],
					h = e[i + 1],
					c = e[i + 2];
				e[i] = 255 - n, e[i + 1] = 255 - h, e[i + 2] = 255 - c
			}
			a.data = e, this.context.putImageData(a, 0, 0), t.setAttribute("src", this.canvas.toDataURL("image/jpeg"))
		},
		brightness: function(t) {
			for(var a = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height), e = a.data, s = e.length, i = 0; s > i; i += 4) {
				var n = e[i],
					h = e[i + 1],
					c = e[i + 2];
				e[i] = n + 20, e[i + 1] = h + 20, e[i + 2] = c + 20
			}
			a.data = e, this.context.putImageData(a, 0, 0), t.setAttribute("src", this.canvas.toDataURL("image/jpeg"))
		},
		opacity: function(t) {
			for(var a = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height), e = a.data, s = e.length, i = 0; s > i; i += 4) e[i + 3] = .5 * e[i + 3];
			a.data = e, this.context.putImageData(a, 0, 0), t.setAttribute("src", this.canvas.toDataURL("image/jpeg"))
		}
	}, t.ImageFilter = t.ImageFilter || a
}(window);